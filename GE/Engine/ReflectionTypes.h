#pragma once
#include "Reflection/ReflectionTypeTraits.h"
//#include "Reflection/TSubClass.h"

DECLARE_REFLECTION_TYPE(bool);
DECLARE_REFLECTION_TYPE(float);

DECLARE_REFLECTION_TYPE(SVector4);
DECLARE_REFLECTION_TYPE(SVector3);
DECLARE_REFLECTION_TYPE(SVector2);
DECLARE_REFLECTION_TYPE(SLinearColor);

DECLARE_REFLECTION_TYPE(int32);
DECLARE_REFLECTION_TYPE(uint32);
DECLARE_REFLECTION_TYPE(std::string);

DECLARE_REFLECTION_TYPE(SWidgetTransform);

DECLARE_REFLECTION_TYPE(SCollisionProfile*);


DECLARE_REFLECTION_TYPE(class XSubclassOf);
DECLARE_REFLECTION_TYPE(class XClass*);
DECLARE_REFLECTION_TYPE(XEnum);


DECLARE_REFLECTION_TYPE(struct SAnchorData);


DECLARE_REFLECTION_TYPE(struct SBlackboardKeySelector);




DECLARE_REFLECTION_TYPE(class AnimNotify*);

DECLARE_REFLECTION_TYPE(class AnimNotifyInfo*);

DECLARE_REFLECTION_TYPE(class PanelSlot*);



DECLARE_SHARED_REFLECTION_TYPE(class BehaviorTree);
DECLARE_SHARED_REFLECTION_TYPE(class Blackboard);
DECLARE_SHARED_REFLECTION_TYPE(class Scene);


DECLARE_SHARED_REFLECTION_TYPE(class SceneInfo);
DECLARE_SHARED_REFLECTION_TYPE(class Skeleton);
DECLARE_SHARED_REFLECTION_TYPE(class AnimationSequence);

DECLARE_SHARED_REFLECTION_TYPE(class Sound);
DECLARE_SHARED_REFLECTION_TYPE(class Material);
DECLARE_SHARED_REFLECTION_TYPE(class MeshAsset);
DECLARE_SHARED_REFLECTION_TYPE(class SkeletalMeshAsset);

DECLARE_SHARED_REFLECTION_TYPE(class TextureAsset);
DECLARE_SHARED_REFLECTION_TYPE(class FontAsset);

DECLARE_SHARED_REFLECTION_TYPE(class ParticleAsset);

//* RawPoint Only For Transform 
DECLARE_SHARED_REFLECTION_TYPE(class SceneComponent);
DECLARE_SHARED_REFLECTION_TYPE(class ObjectComponent);